import { query } from '$lib/server/database';
import type { Pin } from '$lib/types';
import type { RequestHandler } from './$types';
import { error, json } from '@sveltejs/kit';

//async function createPin(pin: Pin) {}

export async function getPins() {
	const result = await query('SELECT * FROM pins');
	return result.rows;
}

//pins schema
// create table
//   public.pins (
//     id bigint generated by default as identity,
//     created_at timestamp with time zone not null default now(),
//     latlng character varying null,
//     title character varying null,
//     description character varying null,
//     ip_address_creator character varying null,
//     type text not null,
//     constraint pins_pkey primary key (id)
//   ) tablespace pg_default;

async function createPin(pin: Pin) {
	query(
		'INSERT INTO pins (latlng, title, description, ip_address_creator, type) VALUES ($1, $2, $3, $4, $5)',
		[pin.latlng, pin.title, pin.description, pin.ip_address_creator, pin.type]
	);
}

export const GET: RequestHandler = async (event) => {
	try {
		const pins = await getPins();
		return json(pins);
	} catch (e) {
		throw error(500, 'could not communicate with database');
	}
};

export const POST: RequestHandler = async (event) => {
	try {
		const body = await event.request.json();
		const pin = await createPin(body);
		return json({});
	} catch (e) {
		throw error(500, 'could not communicate with database');
	}
};
